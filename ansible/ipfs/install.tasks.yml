- name: Create the ipfs user
  become: yes
  user:
    name: ipfs
    state: present
    shell: /bin/bash
    home: /home/ipfs

- name: Make sure the ipfs user's home directory exists
  become: yes
  file:
    path: /home/ipfs
    state: directory
    owner: ipfs
    group: ipfs
    mode: 0755

- name: Download kubo on the service user's home directory
  become: yes
  shell: "wget https://dist.ipfs.tech/kubo/v0.27.0/kubo_v0.27.0_linux-amd64.tar.gz"
  args:
    chdir: "/home/ipfs"

# TODO: install and use ipfs-update to install and update the ipfs binary
- name: Extract kubo
  become: yes
  shell: "tar -xzvf kubo_v0.27.0_linux-amd64.tar.gz && rm kubo_v0.27.0_linux-amd64.tar.gz"
  args:
    chdir: "/home/ipfs"

- name: install kubo
  become: yes
  shell: "bash install.sh"
  args:
    chdir: "/home/ipfs/kubo"

- name: Initialize kubo
  remote_user: ipfs
  shell: "ipfs init --profile server"
  args:
    chdir: "/home/ipfs"

- name: Configure our gateway to only serve pinned content
  remote_user: ipfs
  shell: "ipfs config --json Gateway.NoFetch true"
  args:
    chdir: "/home/ipfs"

- name: Configure our API to listen on port 5000
  remote_user: ipfs
  shell: "ipfs config Addresses.API /ip4/127.0.0.1/tcp/5000"
  args:
    chdir: "/home/ipfs"

- name: Create a systemd service for ipfs
  become: yes
  copy:
    src: ./ipfs.service
    dest: /etc/systemd/system/ipfs.service
    owner: root
    group: root
    mode: '0644'

- name: Manually reload daemon (example)
  become: yes
  ansible.builtin.command: systemctl daemon-reload
  ignore_errors: yes

- name: Enable the ipfs service
  become: yes
  systemd:
    name: ipfs
    enabled: yes
    state: started